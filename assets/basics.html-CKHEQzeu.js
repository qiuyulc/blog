import{_ as l,c as i,a,o as t}from"./app-LxOZ_n_-.js";const d={};function u(r,e){return t(),i("div",null,e[0]||(e[0]=[a('<h2 id="对mvvm的理解" tabindex="-1"><a class="header-anchor" href="#对mvvm的理解"><span>对MVVM的理解</span></a></h2><ul><li>MVVM是Model-View-ViewModel的缩写，是一种设计思想。 <ul><li>Model：数据模型，在Model中定义数据修改和操作的业务逻辑</li><li>View 代表UI组件，它负责激昂数据模型转换成UI展现出来，ViewModel是一个同步View 和 Model的对象</li></ul></li><li>在MVVM架构下，View和Model之间没有直接的联系，通过ViewModel进行交互，Model和ViewModel之间的交互是双向的，因此VIew数据的变化会同步到Model中，而Model数据的变化也会立即反应到View中。</li><li>通过ViewModel把VIew和Model层连接起来，不需要手动操作DOM，只需要关注数据。</li></ul><h2 id="vue的优点" tabindex="-1"><a class="header-anchor" href="#vue的优点"><span>Vue的优点</span></a></h2><ul><li>响应式编程</li><li>组件化开发</li><li>虚拟DOM</li></ul><h2 id="vue生命周期" tabindex="-1"><a class="header-anchor" href="#vue生命周期"><span>Vue生命周期</span></a></h2><ul><li>什么是生命周期</li><li>vue生命周期的作用是什么</li><li>vue生命周期有哪些阶段</li><li>第一次页面加载会触发那几个钩子</li><li>DOM渲染在那个周期完成</li><li>多组件（父子组件）中生命周期的调用顺序</li></ul><h3 id="什么是生命周期" tabindex="-1"><a class="header-anchor" href="#什么是生命周期"><span>什么是生命周期</span></a></h3><p>对于Vue来说，生命周期就是一个Vue实例从创建到销毁的过程。</p><h3 id="vue生命周期的作用" tabindex="-1"><a class="header-anchor" href="#vue生命周期的作用"><span>vue生命周期的作用</span></a></h3><p>生命周期其实就是回调函数，对于vue实例来说，在运行的不同阶段插入不同的回调函数，为使用者提供不同的调用时机。</p><h3 id="vue生命周期有哪几个阶段" tabindex="-1"><a class="header-anchor" href="#vue生命周期有哪几个阶段"><span>vue生命周期有哪几个阶段</span></a></h3><p>共分为8个阶段：创建前/后，载入前/后，更新前/后，销毁前/后。</p><ul><li>beforeCreate：是new Vue之后触发的第一个钩子，在当前阶段data、methods、computed以及watch上的数据和方法都不能访问。</li><li>created：实例创建完成后发生，当前阶段已经完成了数据观测，也可以使用手数据、更改数据、在这里更改数据不回触发updated函数，可以做一些初始化数据的获取，在当前阶段无法于DOM进行交互，如果非要想，可以通过vm.$nextTick来访问DOM。</li><li>beforMount：发生在挂载之前，在这之前template模版已导入渲染函数编译。而当前阶段虚拟DOM已经创建完成，即将开始渲染。在此时也可以对数据进行更改，不会触发updated。</li><li>mounted：在挂载完成后繁盛，当前阶段，Vue实例已经初始化完成，虚拟DOM已经渲染成真实DOM，在这一步可以访问到DOM节点，进行DOM操作。</li><li>beforeUpdate：发生在更新之前，也就是响应式数据发生更新，虚拟DOM重新渲染之前被触发，你可以在这一步中进一步更改状态，不会造成重渲染。</li><li>updated：发生在更新完成之后，当前阶段组件DOM已经更新，可以执行依赖于DOM的操作。注意：不要在此函数中更改数据，可能会导致无限循环更新。</li><li>beforeDestroy：发生在实例销毁之前，在这一步实例仍然完全可用。</li><li>destroyed：发生在实例销毁之后，所有的事件监听器会被移除，所有的子实例也会被销毁。</li></ul><h3 id="第一次页面加载会触发那几个钩子" tabindex="-1"><a class="header-anchor" href="#第一次页面加载会触发那几个钩子"><span>第一次页面加载会触发那几个钩子</span></a></h3><p>beforeCreate、created、beforeMount、mounted。</p><h3 id="dom渲染在那个周期就完成" tabindex="-1"><a class="header-anchor" href="#dom渲染在那个周期就完成"><span>DOM渲染在那个周期就完成</span></a></h3><p>DOM渲染在mounted阶段完成，此阶段真实的DOM挂载完成，数据完成双响绑定，可以访问到DOM节点。</p><h3 id="多组件-父子组件-中生命周期的调用顺序" tabindex="-1"><a class="header-anchor" href="#多组件-父子组件-中生命周期的调用顺序"><span>多组件（父子组件）中生命周期的调用顺序</span></a></h3><p>组件的调用顺序都是先父后子，渲染完成的顺序是先子后父。组件的销毁操作是先父后子，销毁完成的顺序是先子后父。</p><ul><li><p>加载渲染过程： 父beforeCreate -&gt; 父created -&gt; 父beforeMount-&gt;子beforeCreate -&gt; 子created -&gt; 子beforeMount -&gt; 子mounted -&gt; 父mounted</p></li><li><p>子组件更新过程： 父beforeUpdat -&gt; 子brforeUpdate -&gt; 子updated -&gt; 父updated</p></li><li><p>父组件更新过程： 父beforeUpdate -&gt; 父updated</p></li><li><p>销毁过程： 父beforeDestroy -&gt; 子beforDestroy -&gt; 子destroyed -&gt; 父destroyed</p></li></ul>',20)]))}const o=l(d,[["render",u],["__file","basics.html.vue"]]),s=JSON.parse('{"path":"/interview/vue/basics.html","title":"vue面试题","lang":"zh-CN","frontmatter":{"title":"vue面试题","description":"vue面试题"},"headers":[{"level":2,"title":"对MVVM的理解","slug":"对mvvm的理解","link":"#对mvvm的理解","children":[]},{"level":2,"title":"Vue的优点","slug":"vue的优点","link":"#vue的优点","children":[]},{"level":2,"title":"Vue生命周期","slug":"vue生命周期","link":"#vue生命周期","children":[{"level":3,"title":"什么是生命周期","slug":"什么是生命周期","link":"#什么是生命周期","children":[]},{"level":3,"title":"vue生命周期的作用","slug":"vue生命周期的作用","link":"#vue生命周期的作用","children":[]},{"level":3,"title":"vue生命周期有哪几个阶段","slug":"vue生命周期有哪几个阶段","link":"#vue生命周期有哪几个阶段","children":[]},{"level":3,"title":"第一次页面加载会触发那几个钩子","slug":"第一次页面加载会触发那几个钩子","link":"#第一次页面加载会触发那几个钩子","children":[]},{"level":3,"title":"DOM渲染在那个周期就完成","slug":"dom渲染在那个周期就完成","link":"#dom渲染在那个周期就完成","children":[]},{"level":3,"title":"多组件（父子组件）中生命周期的调用顺序","slug":"多组件-父子组件-中生命周期的调用顺序","link":"#多组件-父子组件-中生命周期的调用顺序","children":[]}]}],"git":{"updatedTime":1745413812000,"contributors":[{"name":"qiuyulc","username":"qiuyulc","email":"qiuyulc@gmail.com","commits":1,"url":"https://github.com/qiuyulc"}]},"filePathRelative":"interview/vue/basics.md"}');export{o as comp,s as data};
