import{_ as s,c as a,a as p,o as t}from"./app-LxOZ_n_-.js";const e={};function l(c,n){return t(),a("div",null,n[0]||(n[0]=[p(`<h1 id="react" tabindex="-1"><a class="header-anchor" href="#react"><span>react</span></a></h1><h2 id="项目初始化" tabindex="-1"><a class="header-anchor" href="#项目初始化"><span>项目初始化</span></a></h2><ul><li>vite</li><li>create-react-app</li></ul><h2 id="jsx" tabindex="-1"><a class="header-anchor" href="#jsx"><span>jsx</span></a></h2><p>全称 javascript and xml ，在 JavaScript 代码中编写 html 代码的一种规范 因为规范是为编译器设计的。</p><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx" data-title="jsx"><pre><code><span class="line"><span class="token keyword">const</span> element <span class="token operator">=</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Hello,world!</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>jsx 通过编译器进行转换，babel(@babel/preset-react、@babel/plugin-transform-react-jsx) 通过 jsx 转换后，代码就会变成 js 引擎可以执行的代码</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> _reactJsxRuntime <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;react/jsx-runtime&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">var</span> element <span class="token operator">=</span> <span class="token comment">/*#__PURE__*/</span> _reactJsxRuntime<span class="token punctuation">.</span><span class="token function">jsx</span><span class="token punctuation">(</span><span class="token string">&quot;h1&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">&quot;Hello,world!&quot;</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再在 react 运行时，通过 react 定义的 jsx 创建 ReactElement</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">return</span> <span class="token function">ReactElement</span><span class="token punctuation">(</span></span>
<span class="line">  type<span class="token punctuation">,</span></span>
<span class="line">  key<span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">undefined</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">undefined</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token function">getOwner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">  props<span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">undefined</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token keyword">undefined</span></span>
<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hooks" tabindex="-1"><a class="header-anchor" href="#hooks"><span>hooks</span></a></h2><ol><li>useState</li><li>useEffect</li><li>useContext</li><li>useReducer</li><li>useCallback</li><li>useMemo</li><li>useRef</li><li>useImperativeHandle</li><li>useLayoutEffect</li><li>useDebugValue</li></ol><h2 id="样式方案和状态方案" tabindex="-1"><a class="header-anchor" href="#样式方案和状态方案"><span>样式方案和状态方案</span></a></h2><p>样式方案：</p><ul><li>内联方案</li><li>module css</li><li>css in js</li><li>tailwind css</li></ul><p>状态方案：</p><ul><li>useState</li><li>useReducer</li><li>useContext</li><li>useSyncExternalStore</li><li>redux</li><li>mobx</li><li>zustand</li><li>jotai</li><li>recoil</li></ul><h2 id="react-知识进阶" tabindex="-1"><a class="header-anchor" href="#react-知识进阶"><span>React 知识进阶</span></a></h2><p>目标</p><ul><li>初中级 a. 掌握 React 进阶特性 ：掌握 ref、 fonwardRef、suspense、lazy 等特性 b. 深入了解 React 18 基础：深入理解 React hooks，能根据实际业务需求封装自定义 hook</li><li>高级 a. 深入理解 React 样式体系方案：深入理解样式方案，对于 module css 、css in js 样式方案有深入了解 b. 深入掌握 React + TypeScript 开发范式：掌握基于 TypeScript 应用开发范式，熟练使用 TypeScript 约束 React 编码</li></ul><ol><li>ref</li><li>forwardRef</li><li>Suspense</li><li>lazy</li><li>memo</li></ol><p>自定义 Hooks</p><p>样式方案</p><p>状态方案</p><h2 id="进阶基础知识" tabindex="-1"><a class="header-anchor" href="#进阶基础知识"><span>进阶基础知识</span></a></h2><ol><li>ref 为什么需要 ref，引用</li></ol><ul><li>dom 引用</li><li>作为不需要引起视图更新的数据储存。</li></ul><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">RefDemo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> refs <span class="token operator">=</span> <span class="token function">useRef</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>refs<span class="token punctuation">.</span>current<span class="token punctuation">.</span>c1 <span class="token operator">=</span> node<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">1</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>refs<span class="token punctuation">.</span>current<span class="token punctuation">.</span>c2 <span class="token operator">=</span> node<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">2</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>refs<span class="token punctuation">.</span>current<span class="token punctuation">.</span>c3 <span class="token operator">=</span> node<span class="token punctuation">)</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">3</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>forwardRef ref 转发</li></ol><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">const</span> ForwardRefDemo <span class="token operator">=</span> <span class="token function">forwardRef</span><span class="token punctuation">(</span><span class="token punctuation">(</span>props<span class="token punctuation">,</span> ref<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span> <span class="token attr-name">ref</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>ref<span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text">forwardRef</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>Suspense 异步组件</li></ol><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> Suspense <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">AsyncDemo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>count<span class="token punctuation">,</span> setCount<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> Header <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;./Header&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token punctuation">(</span>module<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> module<span class="token punctuation">.</span>Header</span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> Footer <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">lazy</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&quot;./Footer&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token punctuation">(</span>module<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> module<span class="token punctuation">.</span>Footer</span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Suspense</span></span> <span class="token attr-name">fallback</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">Loading...</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span>count <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Header</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">        </span><span class="token punctuation">{</span>count <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Footer</span></span> <span class="token punctuation">/&gt;</span></span><span class="token punctuation">}</span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Suspense</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种拆分后组件会被拆包，加载时动态导入</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">use</span><span class="token punctuation">(</span>promise<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>promise<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&quot;fulfilled&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">return</span> promise<span class="token punctuation">.</span>value<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>promise<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&quot;rejected&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">throw</span> promise<span class="token punctuation">.</span>reason<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>promise<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token string">&quot;pending&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">throw</span> promise<span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    promise<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&quot;pending&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span></span>
<span class="line">      <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        promise<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&quot;fulfilled&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        promise<span class="token punctuation">.</span>value <span class="token operator">=</span> result<span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">(</span>reason<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">        promise<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&quot;rejected&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        promise<span class="token punctuation">.</span>reason <span class="token operator">=</span> reason<span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">throw</span> promise<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&quot;react&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> use <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;./use&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">fetchData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;data&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">Header</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token function">use</span><span class="token punctuation">(</span><span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>data<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>错误边界</p><ol start="4"><li><p>memo</p></li><li><p>useState</p></li></ol><p>useState 是 useReducer 语法糖</p><ol start="6"><li>useEffect</li><li>useLayoutEffect</li><li>useId</li><li>useImperativeHandle</li><li>useTransition</li><li>useDeferredValue</li><li>useSyncExternalStore</li></ol><h2 id="react-状态管理" tabindex="-1"><a class="header-anchor" href="#react-状态管理"><span>React 状态管理</span></a></h2><ul><li>初中级： a. 掌握 React 状态管理方案：掌握 React 状态管理的基本概念和方法，包括 useState、useReaducer、 useContext、useSyncExternalStore 等 b. 掌握 React 常见状态管理方案：掌握 React 常见几种状态管理库：Redex、Zustand、Jotai c. 了解 Redux 原理：了解单一状态树、reducer、acion、state flow，理解 Redux 单项数据 流实现。</li><li>高级： a. 深入 React 集中状态管理方案：深入理解 React 集中状态管理方案的原理和实现，能根据实际业务选择合适方案 b. 手写 Redux：手写简化版 Redux，从 0 实现核心功能，如 createStore、combineReducers、applyMiddleware c. 其他状态库原理浅析：分析其他流行的状态管理库，如 Valtio、XState、Mobx、Recoil、Zustand 等。 了解设计理念、使用场景、优势于不足，并能在实际项目中根据需求选择合适的状态管理方案</li></ul><h3 id="react-基础状态管理" tabindex="-1"><a class="header-anchor" href="#react-基础状态管理"><span>React 基础状态管理</span></a></h3><ul><li>useState</li><li>useReducer</li><li>useContext</li><li>useSyncExternalStore</li></ul><h4 id="usestate" tabindex="-1"><a class="header-anchor" href="#usestate"><span>useState</span></a></h4><p>react 中是状态驱动视图更新，时刻需要关注状态值的变更</p><p>什么操作会使这个状态发生更改，而后状态驱动视图更新（react 内部实现）</p><ul><li>点击事件（onClick）</li><li>副作用</li><li>网络请求的响应</li></ul><h4 id="usereducer" tabindex="-1"><a class="header-anchor" href="#usereducer"><span>useReducer</span></a></h4><h4 id="usecontext" tabindex="-1"><a class="header-anchor" href="#usecontext"><span>useContext</span></a></h4><h3 id="集中状态管理方案" tabindex="-1"><a class="header-anchor" href="#集中状态管理方案"><span>集中状态管理方案</span></a></h3><h4 id="redux" tabindex="-1"><a class="header-anchor" href="#redux"><span>redux</span></a></h4><h3 id="redux-实现" tabindex="-1"><a class="header-anchor" href="#redux-实现"><span>Redux 实现</span></a></h3><p>重点关注三个概念 强调阅读源码和理解原理之前一定要熟悉使用 api</p><p>入口：creaateStore 操作：action reducer</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// reducer 是用于生成新状态的</span></span>
<span class="line"><span class="token comment">// initialState 是初始状态</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token parameter">reducer<span class="token punctuation">,</span>initialState</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">//初始状态</span></span>
<span class="line">    <span class="token comment">//所有状态都挂载到这个变量上，这也就是我们说的状态树</span></span>
<span class="line">    <span class="token keyword">let</span> state <span class="token operator">=</span> initialState<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 注册事件</span></span>
<span class="line">    <span class="token keyword">const</span> listeners <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//新状态生成一定要借助动作</span></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 为什么说reducer是一个纯函数</span></span>
<span class="line">        state <span class="token operator">=</span> <span class="token function">reducer</span><span class="token punctuation">(</span>state<span class="token punctuation">,</span>action<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 通知订阅者</span></span>
<span class="line"></span>
<span class="line">        listeners<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">listener</span> <span class="token operator">=&gt;</span> <span class="token function">listener</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">//获取状态</span></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> state<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">function</span> <span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token parameter">listener</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        listeners<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">//事件只要有订阅就一定有取消订阅</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">const</span> index <span class="token operator">=</span> listeners<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>listener<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            listeners<span class="token punctuation">.</span><span class="token function">splice</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">        dispatch<span class="token punctuation">,</span></span>
<span class="line">        getState<span class="token punctuation">,</span></span>
<span class="line">        subscribe</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//使用</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">reducer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span>action</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">switch</span><span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token string">&#39;UPDATE_NAME&#39;</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token operator">...</span>state<span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">name</span><span class="token operator">:</span>action<span class="token punctuation">.</span>payload</span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">case</span> <span class="token string">&#39;UPDATE_AGE&#39;</span><span class="token operator">:</span><span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">return</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token operator">...</span>state<span class="token punctuation">,</span></span>
<span class="line">                <span class="token literal-property property">age</span><span class="token operator">:</span>action<span class="token punctuation">.</span>payload</span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">default</span><span class="token operator">:</span><span class="token keyword">return</span> state</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">crateStore</span><span class="token punctuation">(</span>reducer<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">&#39;张三&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> unsubscribe <span class="token operator">=</span> state<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;dispatch-log&#39;</span>state<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">&#39;UPDATE_NAME&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">payload</span><span class="token operator">:</span><span class="token string">&#39;李四&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token punctuation">{</span>dispatch<span class="token punctuation">,</span>getState<span class="token punctuation">,</span>subscribe<span class="token punctuation">}</span> <span class="token operator">=</span> store<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">//结合react使用</span></span>
<span class="line"><span class="token comment">// </span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">CustomReduxDemo</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">useSyncExternalStore</span><span class="token punctuation">(</span>subscribe<span class="token punctuation">,</span>getState<span class="token punctuation">,</span>getState<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">return</span> <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span>custom redux demo<span class="token punctuation">{</span>state<span class="token punctuation">.</span>name<span class="token punctuation">}</span> <span class="token operator">--</span><span class="token operator">--</span> <span class="token punctuation">{</span>state<span class="token punctuation">.</span>age<span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token operator">&lt;</span>button onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">&#39;UPDATE_NAME&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">payload</span><span class="token operator">:</span><span class="token string">&#39;王五&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>update name<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></span>
<span class="line">        <span class="token operator">&lt;</span>button  onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">type</span><span class="token operator">:</span><span class="token string">&#39;UPDATE_AGE&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">payload</span><span class="token operator">:</span><span class="token number">16</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">&gt;</span>update age<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">&gt;</span></span>
<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// const state = createStore(xxx,xxxx)</span></span>
<span class="line"><span class="token comment">// state.dispatch({type:&quot;xxx&quot;,payload:&#39;xxxx&#39;})</span></span>
<span class="line"><span class="token comment">// state.getState()</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// 解绑</span></span>
<span class="line"><span class="token comment">// const unsubscribe = state.subscribe(()=&gt;{</span></span>
<span class="line"><span class="token comment">//     console.log(state.getState());</span></span>
<span class="line"><span class="token comment">// })</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="mantine" tabindex="-1"><a class="header-anchor" href="#mantine"><span>mantine</span></a></h3><p><a href="https://github.com/mantinedev/mantine" target="_blank" rel="noopener noreferrer">源码</a></p><h3 id="jotai" tabindex="-1"><a class="header-anchor" href="#jotai"><span>jotai</span></a></h3><p><a href="https://www.jotai.com.cn/" target="_blank" rel="noopener noreferrer">官网</a></p><h3 id="面试题" tabindex="-1"><a class="header-anchor" href="#面试题"><span>面试题</span></a></h3><h4 id="说说你对-redux-的理解" tabindex="-1"><a class="header-anchor" href="#说说你对-redux-的理解"><span>说说你对 redux 的理解</span></a></h4><p>redux 时一种用于 JavaScript 应用的状态管理工具，特别适用于 react 应用。通过单一的状态树来管理整个应用的状态， 使状态管理更加可预测和易于调试。首先注意，redux 和 react 本身没有任何关系，redux 和 react 的关系完全取决于 react-redux</p><ul><li>单一状态树</li><li>纯函数 reducer</li><li>动作（action）</li><li>中间件（middleware）</li><li>数据流</li><li>工具支持</li></ul><h4 id="状态改变引起视图频繁更新、怎么优化" tabindex="-1"><a class="header-anchor" href="#状态改变引起视图频繁更新、怎么优化"><span>状态改变引起视图频繁更新、怎么优化？</span></a></h4><ol><li>避免不必要的状态更新</li><li>拆分组件</li><li>使用 react context 优化</li><li>优化 redux</li><li>批量更新</li><li>避免过深的组件嵌套</li><li>使用合适的状态管理工具</li><li>细颗粒度更新</li></ol><h2 id="react路由使用与原理详情" tabindex="-1"><a class="header-anchor" href="#react路由使用与原理详情"><span>react路由使用与原理详情</span></a></h2><ul><li><p>初中级 a. 掌握React-Router 路由方案：掌握React-Router 基础使用 b. 了解路由库实现原理</p></li><li><p>高级 a. 深入理解路由体系：深入理解路由体系，包含声明式、配置式、约定时 b. 掌握React-Router常用api：掌握常用API、包括常用租金啊、常用方案、常用hook c. 手写React-Router：实现最核心的React-Router代码，包括路由处理、历史记录、记录变更监听和Hooks封装等 d. 了解其他路由方案：了解除了React-Router的其他路由方案，包括：@tastack/router、wouter</p></li></ul><h3 id="react-router基础使用" tabindex="-1"><a class="header-anchor" href="#react-router基础使用"><span>React-Router基础使用</span></a></h3><p>前端需要实现一套路由的实现</p><p>路由做了什么工作？当路径发生改变时，映射对应视图进行渲染</p><h4 id="多类型记录" tabindex="-1"><a class="header-anchor" href="#多类型记录"><span>多类型记录</span></a></h4><ul><li>const browserRouter = createBrowserRouter()</li><li>const hashRouter = createHashRouter()</li><li>const memoryRouter = createMemoryRouter()</li></ul><h3 id="react-router-源码解析" tabindex="-1"><a class="header-anchor" href="#react-router-源码解析"><span>React-Router 源码解析</span></a></h3><p>从两个api入手</p><ul><li>createBrowserRouter</li><li>RouterProvider</li></ul><ol><li>关注 createBrowserRouter 的函数定义</li></ol><p>https://github.com/remix-run/react-router/blob/v6/packages/react-router-dom/index.tsx#L268</p><ol start="2"><li>调用 createRouter</li></ol><p>https://github.com/remix-run/react-router/blob/main/packages/react-router/lib/router/router.ts#L807</p><ol start="3"><li><p>根据不同方法，调用create历史的方法，browserHistory和hashHistory因为区别仅存在于history</p></li><li><p>区分history还是hash时调用</p></li></ol><p>https://github.com/remix-run/react-router/blob/main/packages/react-router/lib/router/history.ts#L454</p><ol start="5"><li>匹配路由</li></ol><p>https://github.com/remix-run/react-router/blob/c13ae095c9a4870a7eb601a421933cf6d184f9d9/packages/react-router/lib/router/router.ts#L872</p><ol start="6"><li>渲染匹配路由对应的视图</li></ol><p>https://github.com/remix-run/react-router/blob/c13ae095c9a4870a7eb601a421933cf6d184f9d9/packages/react-router/lib/components.tsx#L1230</p><h3 id="react-router基础实现" tabindex="-1"><a class="header-anchor" href="#react-router基础实现"><span>React-Router基础实现</span></a></h3><ol><li>Provider(BrowserRouter)</li><li>Route</li><li>匹配</li><li>渲染</li></ol><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">import</span> React <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">RouterContextValue</span><span class="token punctuation">{</span></span>
<span class="line">  history<span class="token operator">:</span>History</span>
<span class="line">  location<span class="token operator">:</span><span class="token builtin">string</span></span>
<span class="line">  navigate<span class="token operator">:</span><span class="token punctuation">(</span>to<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">BrowserRouterProps</span><span class="token punctuation">{</span></span>
<span class="line">  </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> RouterContext <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token generic-function"><span class="token function">createContext</span><span class="token generic class-name"><span class="token operator">&lt;</span>RouterContextValue<span class="token operator">|</span><span class="token keyword">null</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">useNavigate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token function">useContext</span><span class="token punctuation">(</span>RouterContext<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span>navigate<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> BrowserRouter<span class="token operator">:</span>React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>PropsWithChildren<span class="token operator">&lt;</span>BrowserRouterProps<span class="token operator">&gt;&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token punctuation">[</span>location<span class="token punctuation">,</span> setLocation<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">navigate</span> <span class="token operator">=</span> <span class="token punctuation">(</span>to<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">  window<span class="token punctuation">.</span>history<span class="token punctuation">.</span><span class="token function">pushState</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token function">setLocation</span><span class="token punctuation">(</span>to<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">const</span> <span class="token function-variable function">handlePopstate</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token function">setLocation</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>pathname<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;popstate&#39;</span><span class="token punctuation">,</span>handlePopstate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    window<span class="token punctuation">.</span><span class="token function">removeEventListener</span><span class="token punctuation">(</span><span class="token string">&#39;popstate&#39;</span><span class="token punctuation">,</span>handlePopstate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">RouterContext.Provider</span></span> <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>location<span class="token punctuation">,</span>navigate<span class="token punctuation">}</span><span class="token punctuation">}</span></span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">RouterContext.Provider</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-tsx line-numbers-mode" data-highlighter="prismjs" data-ext="tsx" data-title="tsx"><pre><code><span class="line"><span class="token keyword">interface</span> <span class="token class-name">RoutesProps</span><span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">interface</span> <span class="token class-name">RouteProps</span><span class="token punctuation">{</span></span>
<span class="line">  path<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line">  element<span class="token operator">:</span>React<span class="token punctuation">.</span>ReactNode<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">const</span> <span class="token function-variable function">mathPath</span> <span class="token operator">=</span> <span class="token punctuation">(</span>pathname<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">,</span>path<span class="token operator">:</span><span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> pathname <span class="token operator">===</span> path<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> Routes<span class="token operator">:</span>PropsWithChildren<span class="token operator">&lt;</span>RoutesProps<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>children<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> element<span class="token operator">:</span>React<span class="token punctuation">.</span>ReactNode <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">const</span> location <span class="token operator">=</span> <span class="token function">useContxt</span><span class="token punctuation">(</span>RouterContext<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">.</span>location<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">  React<span class="token punctuation">.</span>Children<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>element <span class="token operator">&amp;&amp;</span> React<span class="token punctuation">.</span><span class="token function">isValidElement</span><span class="token punctuation">(</span>child<span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span><span class="token function">matchPath</span><span class="token punctuation">(</span>child<span class="token punctuation">.</span>props<span class="token punctuation">.</span>path<span class="token punctuation">,</span>location<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>
<span class="line">      element <span class="token operator">=</span> child</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token keyword">return</span> element<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> Route<span class="token operator">:</span>React<span class="token punctuation">.</span><span class="token constant">FC</span><span class="token operator">&lt;</span>RouteProps<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span>path<span class="token punctuation">,</span>element<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">{</span>element<span class="token punctuation">}</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,89)]))}const i=s(e,[["render",l],["__file","react.html.vue"]]),u=JSON.parse('{"path":"/miaoma/react.html","title":"react","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"项目初始化","slug":"项目初始化","link":"#项目初始化","children":[]},{"level":2,"title":"jsx","slug":"jsx","link":"#jsx","children":[]},{"level":2,"title":"hooks","slug":"hooks","link":"#hooks","children":[]},{"level":2,"title":"样式方案和状态方案","slug":"样式方案和状态方案","link":"#样式方案和状态方案","children":[]},{"level":2,"title":"React 知识进阶","slug":"react-知识进阶","link":"#react-知识进阶","children":[]},{"level":2,"title":"进阶基础知识","slug":"进阶基础知识","link":"#进阶基础知识","children":[]},{"level":2,"title":"React 状态管理","slug":"react-状态管理","link":"#react-状态管理","children":[{"level":3,"title":"React 基础状态管理","slug":"react-基础状态管理","link":"#react-基础状态管理","children":[]},{"level":3,"title":"集中状态管理方案","slug":"集中状态管理方案","link":"#集中状态管理方案","children":[]},{"level":3,"title":"Redux 实现","slug":"redux-实现","link":"#redux-实现","children":[]},{"level":3,"title":"mantine","slug":"mantine","link":"#mantine","children":[]},{"level":3,"title":"jotai","slug":"jotai","link":"#jotai","children":[]},{"level":3,"title":"面试题","slug":"面试题","link":"#面试题","children":[]}]},{"level":2,"title":"react路由使用与原理详情","slug":"react路由使用与原理详情","link":"#react路由使用与原理详情","children":[{"level":3,"title":"React-Router基础使用","slug":"react-router基础使用","link":"#react-router基础使用","children":[]},{"level":3,"title":"React-Router 源码解析","slug":"react-router-源码解析","link":"#react-router-源码解析","children":[]},{"level":3,"title":"React-Router基础实现","slug":"react-router基础实现","link":"#react-router基础实现","children":[]}]}],"git":{"updatedTime":1745413812000,"contributors":[{"name":"qiuyulc","username":"qiuyulc","email":"qiuyulc@gmail.com","commits":1,"url":"https://github.com/qiuyulc"}]},"filePathRelative":"miaoma/react.md"}');export{i as comp,u as data};
